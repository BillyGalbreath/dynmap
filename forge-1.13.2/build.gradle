buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()        
        maven {url = "https://oss.sonatype.org/content/repositories/snapshots/"}
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'com.github.johnrengelman.shadow'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'
ext.buildNumber = System.getenv().BUILD_NUMBER ?: "Dev"

minecraft {
    mappings channel: 'snapshot', version: '20180921-1.13'
}

project.archivesBaseName = "${project.archivesBaseName}-forge-1.13.2"

dependencies {
    minecraft 'net.minecraftforge:forge:1.13.2-25.0.219'
    compile project(path: ":DynmapCore", configuration: "shadow")
    compile 'com.googlecode.json-simple:json-simple:1.1.1'
    compile 'org.yaml:snakeyaml:1.23'
}

processResources
{
    inputs.property "version", project.version + '-' + project.ext.buildNumber
    
    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'META-INF/mods.toml'
                
        // replace version and mcversion
        expand version: project.version + '-' + project.ext.buildNumber
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        include 'META-INF/mods.toml'
    }
}

shadowJar {
    dependencies {
        include(dependency(':DynmapCore'))
    }
    archiveName = "Dynmap-${parent.version}-forge-1.13.2.jar"
    destinationDir = file '../target'
    manifest {
        attributes 'FMLAT': 'dynmap_at.cfg'
    }
}

shadowJar.doLast {
    task ->
        ant.checksum file: task.archivePath
}

afterEvaluate {
reobf {
    shadowJar {
        mappings = createMcpToSrg.output
    }
}
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'dev'
}

artifacts {
    archives deobfJar
}

build.dependsOn(shadowJar)
